# -*- mode: sh; -*-
# various conveniences for working with Nix
# I call this from .bashrc

export NIX_PATH="nixos=${HOME}/code/nixpkgs:nixpkgs=${HOME}/code/nixpkgs"

alias n='nix-env'
alias nix-version='nix-instantiate --eval -E "(import <nixpkgs> {}).lib.version"'

function nix-gc {
    sudo nix-collect-garbage --delete-older-than $1
}

function nix-prefetch-pkgs {
    nix-prefetch-url --unpack https://github.com/NixOS/nixpkgs/archive/$1.tar.gz
}

function bootstrap {
    nix-shell "$HOME/dotfiles/nix/bootstrap.nix" -A "$1"
}

alias list-bootstraps="nix eval --raw '(builtins.concatStringsSep \"\n\" (builtins.attrNames  (import ${HOME}/dotfiles/nix/bootstrap.nix)) + \"\n\")'"

alias nix-snapshot='cp ~/code/active/nix/nixpkgs-snapshot.json .'

# install by local attribute
if [ -d /etc/nixos ]; then
    function nia {
        nix-env -iA nixos.pkgs.$1
    }
else
    function nia {
        nix-env -iA nixpkgs.$1
    }
fi

# shorter nix-shell commands
alias nsh='nix-shell --pure'
alias nixc='eval "$configurePhase"'
alias nixb='eval "$buildPhase"'
