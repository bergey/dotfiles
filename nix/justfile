default: update global
all: global os bootstrap

global:
  #!/usr/bin/env bash
  set -euxo pipefail
  nix-env --no-build-output -if global.nix -A default
  # symlink MacOS Applications
  if [[ -d ~/.nix-profile/Applications/* ]]; then
    for app in ~/.nix-profile/Applications/*; do
      if [[ ! -e /Applications/$(basename "$app") ]]
        then ln -s "$app" /Applications/$(basename "$app")
      fi
    done
  fi

show-trace:
  nix-env --no-build-output -if global.nix -A default --show-trace
    
update:
  @./update.sh
  # TODO only checkout newer commit of nixpkgs git repo & commit here if global rule built successfully

bootstrap:
  nix-build bootstrap.nix
  rm result*

os:
  sudo nixos-rebuild switch

os-update:
  sudo nixos-rebuild switch --upgrade

OLD := "7d"
dots := quote('
     NL == 1 { lines=0; };
     { print $0 >> "prune.log"; dots+=1 };
     dots < 100 { printf "." };
     dots >= 100 { printf ".\n%s ", lines; dots=0; lines += 100 }
     ')

prune:
  date > prune.log
  sudo nix-collect-garbage --delete-older-than {{OLD}} 2>&1 | awk {{dots}}

roots:
  for r in $(nix-store --gc --print-roots | awk '$1 ~ /^\/home\/bergey/ {print $1;}'); do \
    du -shc $(nix-store -qR $r 2>/dev/null) | awk -v r="$r" '$2 ~ /total/ {print $1, r;}' ;  done \
    | sort -h

iso:
  nix-build '<nixpkgs/nixos>' -A config.system.build.isoImage -I nixos-config=iso.nix
